name: CI/CD Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Build job - compile fixture-runner
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            g++ \
            cmake \
            make \
            git \
            ca-certificates \
            libssl-dev \
            libprotobuf-dev \
            protobuf-compiler \
            protobuf-compiler-grpc \
            libgrpc++-dev \
            libgrpc-dev \
            libgoogle-glog-dev \
            libyaml-cpp-dev \
            nlohmann-json3-dev \
            libgtest-dev \
            pkg-config \
            curl

      - name: Build libkuksa-cpp
        run: |
          mkdir -p /tmp/libkuksa-cpp
          cd /tmp/libkuksa-cpp
          git clone --depth 1 https://github.com/tr-sdv-sandbox/libkuksa-cpp.git .
          mkdir -p build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_EXAMPLES=OFF \
            -DBUILD_TESTS=OFF \
            -DCMAKE_INSTALL_PREFIX=/usr/local \
            ..
          make -j$(nproc)
          sudo make install

      - name: Build fixture-runner
        run: |
          mkdir -p build && cd build
          cmake -DCMAKE_BUILD_TYPE=Release ..
          make -j$(nproc)

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fixture-runner-build
          path: |
            build/fixture-runner
            build/tests/integration/test_fixture_runner
          retention-days: 1

  # Integration test job
  test:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: fixture-runner-build
          path: build/

      - name: Make binaries executable
        run: |
          chmod +x build/fixture-runner
          chmod +x build/tests/integration/test_fixture_runner

      - name: Install runtime dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libssl3 \
            libprotobuf-dev \
            libgrpc++-dev \
            libgoogle-glog-dev

      - name: Run integration tests
        run: |
          cd build/tests/integration
          ./test_fixture_runner

  # Docker build and push job
  docker:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=ref,event=branch
            type=ref,event=pr

      - name: Build Docker image
        uses: docker/build-push-action@v5
        if: github.event_name == 'pull_request'
        with:
          context: .
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        if: github.event_name != 'pull_request'
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  # Publish release job (only on semantic version tags)
  release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: docker
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.version.outputs.VERSION }}
          body: |
            ## kuksa-fixture-runner ${{ steps.version.outputs.VERSION }}

            ### Docker Image
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }}
            ```

            ### Usage
            ```bash
            docker run --rm \
              -e KUKSA_ADDRESS=databroker:55555 \
              -v $(pwd)/fixtures.json:/app/fixtures.json:ro \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.VERSION }} \
              fixture-runner --config /app/fixtures.json
            ```

            See [README.md](README.md) for full documentation.
          draft: false
          prerelease: false
          generate_release_notes: true
